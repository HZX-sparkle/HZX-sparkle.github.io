[{"title":"My First Post","url":"/2022/11/08/My-First-Post/","content":"Markdown\nMarkdown是一种轻量级标记语言，排版语法简洁，让人们更多地关注内容本身而非排版。它使用易读易写的纯文本格式编写文档，可与HTML混编，可导出 HTML、PDF 以及本身的 .md 格式的文件。因简洁、高效、易读、易写，Markdown被大量使用，如Github、Wikipedia、简书等。\n\nMarkdown基础语法\n标题语法要创建标题，可在句子或单词前加“#”号，“#”号的多少代表标题的等级。\n\n如### 三级标题将显示成\n三级标题\ntips最好在#和标题之间加一个空格，以方便兼容\n段落语法要创建段落，请使用空白行将一行或多行文本进行分隔。tips不要用空格（spaces）或制表符（ tabs）缩进段落。\n\n\n\n✅ Do this\n❌ Don’t do this\n\n\n\nDon&#39;t put tabs or spaces in front of your paragraphs.\n  This can result in unexpected formatting problems. Don&#39;t add tabs or spaces in front of paragraphs.\n\n\n换行语法在一行的末尾添加两个或多个空格，然后按回车键,即可创建一个换行(&lt;br&gt;)tips几乎每个 Markdown 应用程序都支持两个或多个空格进行换行，称为 结尾空格（trailing whitespace) 的方式，但这是有争议的，因为很难在编辑器中直接看到空格，并且很多人在每个句子后面都会有意或无意地添加两个空格。由于这个原因，你可能要使用除结尾空格以外的其它方式来换行。幸运的是，几乎每个 Markdown 应用程序都支持另一种换行方式：HTML 的 &lt;br&gt; 标签。为了兼容性，请在行尾添加“结尾空格”或 HTML 的 &lt;br&gt; 标签来实现换行。还有两种其他方式我并不推荐使用。CommonMark 和其它几种轻量级标记语言支持在行尾添加反斜杠 (\\) 的方式实现换行，但是并非所有 Markdown 应用程序都支持此种方式，因此从兼容性的角度来看，不推荐使用。并且至少有两种轻量级标记语言支持无须在行尾添加任何内容，只须键入回车键（return）即可实现换行。\n强调语法要强调时，可用粗体或斜体两种方式，也可同时加粗加斜，**粗体**渲染成粗体*斜体*渲染成斜体***粗加斜***渲染成粗加斜tips虽然还有其他的方式进行强调，但为了兼容考虑，最好使用加*号的方法\n引用语法要创建块引用，请在段落前添加一个 &gt; 符号。\n&gt; Dorothy followed her through many of the beautiful rooms in her castle.\n渲染效果如下所示：\n\nDorothy followed her through many of the beautiful rooms in her castle.\n\n多个段落的块引用块引用可以包含多个段落。为段落之间的空白行添加一个 &gt; 符号。\n&gt; Dorothy followed her through many of the beautiful rooms in her castle.&gt;&gt; The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.\n渲染效果如下：\n\nDorothy followed her through many of the beautiful rooms in her castle.\nThe Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.\n\n嵌套块引用块引用可以嵌套。在要嵌套的段落前添加一个 &gt;&gt; 符号。\n&gt; Dorothy followed her through many of the beautiful rooms in her castle.&gt;&gt;&gt; The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.\n渲染效果如下：\n\nDorothy followed her through many of the beautiful rooms in her castle.\n\nThe Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.\n\n\n带有其它元素的块引用块引用可以包含其他 Markdown 格式的元素。并非所有元素都可以使用，你需要进行实验以查看哪些元素有效。\n&gt; #### The quarterly results look great!&gt;&gt; - Revenue was off the chart.&gt; - Profits were higher than ever.&gt;&gt;  *Everything* is going according to **plan**.\n渲染效果如下：\n\nThe quarterly results look great!\nRevenue was off the chart.\nProfits were higher than ever.\n\nEverything is going according to plan.\n\n列表语法将多个条目组织成有序或无序列表\n有序列表创建有序列表，只需在数字后面加上英文句点即可，数字也无需按顺序排列，只需以1起始，如\n1.2.3.\n\n将显示成\n\n第一项\n\n第二项\n\n第三项\n\n\n无序列表创建一个无序列表，只需在每个列表项前加- ,*或+即可，如\n- one- two- three\n\n将显示成\n\none\ntwo\nthree\n\n嵌套列表在列表中，除了文字，我们还能插入其他的东西，只需在其之前添加四个空格键或者一个tab键即可。如文字\n1. first thing2. second thing\tthe other thing3. third thing\n\n将表示成\n\nfirst thing\nsecond thing the other thing\nthird thing\n\n引用块\n1. first thing2. second thing\t&gt;the other thing3. third thing\n\n将表示成\n\nfirst thing\nsecond thing\nthe other thing\n\n\nthird thing\n\n代码块（通常需要添加8个空格或2个tab键）\n1.  Open the file.2.  Find the following code block on line 21:        &lt;html&gt;          &lt;head&gt;            &lt;title&gt;Test&lt;/title&gt;          &lt;/head&gt;3.  Update the title to match the name of your website.\n\n将表示成\n\n Open the file.\n\nFind the following code block on line 21:\n &lt;html&gt;\n   &lt;head&gt;\n     &lt;title&gt;Test&lt;/title&gt;\n   &lt;/head&gt;\n\n\n Update the title to match the name of your website.\n\n\n代码语法如果想将单词或语段显示成代码，可将其包含在反引号（`）中。如\n`word`\n\n将表示成word\n转义反引号如果想让代码中出现反引号，可以将这段代码用双反引号包裹。如\n``这是一个带`的代码``\n\n将表示成这是一个带`的代码\n代码块如果想创建一个代码块，可以将代码的每一行至少缩进四个空格或一个tab键如\ninclude &lt;stdio.h&gt;int main()&#123;printf(&quot;Hello World!&quot;);return 0;&#125;\n\n将表示成    include &lt;stdio.h&gt;    int main()    {    printf(“Hello World!”);    return 0;    }\n这种方法除了在列表中使用之外可能有些麻烦，所以我们还可以将代码块包裹在三个反引号或者三个波浪号之间来创建代码块。如\n~~~代码~~~\n\n将表示成\n代码\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","tags":["markdown"]},{"title":"Hello World","url":"/2022/11/07/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n"},{"title":"matu22级C语言期中考试","url":"/2022/11/25/matu22%E7%BA%A7C%E8%AF%AD%E8%A8%80%E6%9C%9F%E4%B8%AD%E8%80%83%E8%AF%95/","content":"c-1-prime求指定范围之内的素数问题描述：输入2个空格分隔的整数m和n，求这个2个数之间的所有素数并输出。要求输出不包含m和n，且输出数据用空格分隔(包括最后1个数据输出后也要输出空格）。任何不合法是输入输出”error”。\n#include &lt;stdio.h&gt;#include &lt;math.h&gt;int isPrime(int n)&#123;\tif(n&lt;=1) return 0;\t\tif(n==2||n==3)&#123;\t\treturn 1;\t&#125;\t\t\tif(n%6!=1&amp;&amp;n%6!=5)&#123;\t\treturn 0;\t&#125;\t\tint s=(int)sqrt(1.0*n);\tfor (int i=5;i&lt;=s;i=i+6)&#123;\t\tif(n%i==0||n%(i+2)==0)&#123;\t\t\treturn 0;\t\t&#125;\t&#125;\t\treturn 1;&#125;int main()&#123;\tint m,n;\tint input=scanf(&quot;%d %d&quot;,&amp;m,&amp;n); //判断输入是否正确（这里太苟了）\tif(m&lt;=1&amp;&amp;n&lt;=1||m==n||input!=2)&#123;\t\tprintf(&quot;error&quot;);\t\treturn 0;\t&#125;\t\tint max,min;\tif(m&lt;n)&#123;\t\tmax=n;\t\tmin=m;\t&#125;else&#123;\t\tmax=m;\t\tmin=n;\t&#125;\t\tfor(int i=min+1;i&lt;max;i++)&#123;\t\tif(isPrime(i)==1)&#123;\t\t\tprintf(&quot;%d &quot;,i);\t\t&#125;\t&#125;\t\treturn 0;&#125;\n字符串逆序输出输入一个字符串，要求按相反的顺序输出各个字符。例如，输入为AbcD，则输出为DcbA。提示：这个题与习题4.1类似，但需注意的是：存储要输入的字符串的字符数组的长度要足够大；如果输入字符串过长，对应存储的字符数组是否会越界。可以考虑实现变长数组。\n输入输出格式要求：    输入格式：string回车    输出格式：gnirts例如：输入：hello回车输出：olleh\n#include &lt;stdio.h&gt;#include &lt;string.h&gt;int main()&#123;\tchar a[100];\tchar b[100];\tgets(a);\tint l=strlen(a);\tfor(int i=0;i&lt;l;i++)&#123;\t\tb[i]=a[l-i-1];\t&#125;\tputs(b);&#125;\n\na-4-删除star问题描述：现在有一串字符串（长度不超过100），规定输入的字符串中只包含字母和号。如果包含其他符号，则输出”error\\n”请编写程序，实现以下功能：除了字符串前后的号之外，将串中的其他号全部删除。输出字符串之后要输出回车再结束程序。如果输入不符合要求，则输出”error”和回车。假如输入的字符串是*ABC*DEFG********,删除串中的号之后，字符串变成ABCDEFG*****\n#include &lt;stdio.h&gt;#include &lt;string.h&gt;int main()&#123;\tchar a[100];\tgets(a);\tchar b[100];\tint l=strlen(a);\tint j=0;\tint k;\tint begin=0;\tint end=l-1;\tfor(int i=0;i&lt;l;i++)&#123;\t\tif(a[i]!=&#x27;*&#x27;&amp;&amp;a[i]&lt;&#x27;A&#x27;&amp;&amp;a[i]&gt;&#x27;z&#x27;)&#123;\t\t\tprintf(&quot;error\\n&quot;);\t\t\treturn 0;\t\t&#125;\t\tif(a[i]==&#x27;*&#x27;&amp;&amp;j==0) printf(&quot;*&quot;);\t\tif(a[i]!=&#x27;*&#x27;)&#123;\t\t\tif(j==0) begin=i;\t\t\tb[j]=a[i];\t\t\tj++;\t\t&#125;\t&#125;\t\tfor(int i=0;i&lt;j;i++)&#123;\t\tprintf(&quot;%c&quot;,b[i]);\t&#125;\tfor( ;a[end]==&#x27;*&#x27;;end--)&#123;\t\tprintf(&quot;%c&quot;,a[end]);\t&#125;\tprintf(&quot;\\n&quot;);&#125;\n","categories":["码图"],"tags":["C语言"]}]